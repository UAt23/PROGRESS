.PHONY: build dist create_docker_container test dist clean

build: 
	g++ -c main.cpp
	g++ main.o -o ${APPLICATION_NAME}

clean:
	rm *.o $(APPLICATION_NAME)
	rm -rf $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}

create_files_for_packaging:
	mkdir -p $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}
	mkdir -p $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/usr/bin
	cp $(APPLICATION_NAME) $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/usr/bin/
	mkdir -p $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/DEBIAN
	touch $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/DEBIAN/control
	echo 'Package: Triangle' >> $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/DEBIAN/control
	echo 'Version: 1.0-1' >> $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/DEBIAN/control
	echo 'Architecture: amd64' >> $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/DEBIAN/control
	echo 'Maintainer: Ugur Alp <uguralp9948@gmail.com>' >> $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/DEBIAN/control
	echo 'Description: hello world as debian package' >> $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/DEBIAN/control

dist: build create_files_for_packaging 
	dpkg-deb -b $(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}/
	make --file=${MAKE_FILE_NAME} clean
	apt install ./$(APPLICATION_NAME)_${VERSION}-${REV_NUMBER}_${DEB_ARCHITECTURE}.deb
	${APPLICATION_NAME}

test:
	./runTests	